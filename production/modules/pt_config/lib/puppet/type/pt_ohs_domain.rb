# ***************************************************************
#  This software and related documentation are provided under a
#  license agreement containing restrictions on use and
#  disclosure and are protected by intellectual property
#  laws. Except as expressly permitted in your license agreement
#  or allowed by law, you may not use, copy, reproduce,
#  translate, broadcast, modify, license, transmit, distribute,
#  exhibit, perform, publish or display any part, in any form or
#  by any means. Reverse engineering, disassembly, or
#  decompilation of this software, unless required by law for
#  interoperability, is prohibited.
#  The information contained herein is subject to change without
#  notice and is not warranted to be error-free. If you find any
#  errors, please report them to us in writing.
#  
#  Copyright (C) 1988, 2017, Oracle and/or its affiliates.
#  All Rights Reserved.
# ***************************************************************

require 'pathname'
$:.unshift(Pathname.new(__FILE__).dirname.parent.parent)
$:.unshift(Pathname.new(__FILE__).dirname.parent.parent.parent.parent + 'easy_type' + 'lib')

require 'fileutils'
require 'easy_type'
require 'pt_comp_utils/validations'
require 'pt_comp_utils/webserver'

module Puppet
  Type.newtype(:pt_ohs_domain) do
    include EasyType
    include ::PtCompUtils::Validations
    include ::PtCompUtils::WebServer

    @doc = "Manages the state of Oracle HTTP Server domain."

    validate do
      validate_domain_params(self[:os_user], self[:domain_home_dir])
      validate_ohs_webserver_settings(self[:webserver_settings])

      if self[:node_manager_port].nil?
        raise ArgumentError, "Node Manager port information should be " +
                             "specified for managing OHS domain."
      end
      if self[:ensure] == :present
        if self[:pia_webserver_host].nil?
          fail("PIA Webserver host attribute should be specified" +
               "for forwarding OHS requiests")
        end
        if self[:pia_webserver_port].nil?
          fail("PIA Webserver port attribute should be specified" +
               "for forwarding OHS requiests")
        end
      end

    end

    ensurable

    newproperty(:pia_webserver_type) do
      desc "The  type of WebServer PIA domain is using"

      defaultto :weblogic

      newvalues(:weblogic, :websphere)

      validate do |value|
        if value == :websphere
          fail("WebSphere is not supported as the WebServer in this release")
        end
      end
    end

    newproperty(:pia_webserver_host) do
      desc "The PIA Web Server Listen Address."

      validate do |value|
        value.split('.').each do |hostpart|
          unless hostpart =~ /^([\d\w]+|[\d\w][\d\w\-]+[\d\w])$/
            raise Puppet::Error, "Invalid host name"
          end
        end
        if (value =~ /\n/ || value =~ /\r/)
          raise Puppet::Error, "Hostname cannot include newline"
        end
      end
    end

    newproperty(:pia_webserver_port) do

      desc "The PIA Web Server Listen Port."

      newvalues(/^\d+$/)

      munge do |value|
        Integer(value)
      end
    end

    newparam(:node_manager_port) do

      desc "The Node Manager Listen Port."

      newvalues(/^\d+$/)

      defaultto 5556

      munge do |value|
        Integer(value)
      end
    end

    newparam(:domain_home_dir) do

      desc "Specifies the directory where the configuration and administration of
            a OHS domain that can be viewed, modified, or generated by the system."

      validate do |value|
        unless Puppet::Util.absolute_path?(value)
          fail Puppet::Error, "Domain Home Path must be fully qualified, " +
                               "not '#{value}'"
        end
      end
    end

    parameter :domain_name
    parameter :os_user
    parameter :webserver_settings
    parameter :domain_start
  end
end
